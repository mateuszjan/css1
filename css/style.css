/* selektor uniwersalny */

* {
    color: #000;
    box-sizing: border-box;
}

/* selektor laczony */
div.background  {
    background-color: green;
}

/* selektor bezpośrednioego potomka */

li > a {
    color: violet;
}

/* selektor potomka */

li a {
    color: black;
}

/* selektor bezpośrednioego potomka */

nav + .background {
    background-color: limegreen;
}

.toThree {
    width: 200px;
    height: 200px;
    background-color: black;
}

/* psudoklasy (najechanie myszką) */    

li a:hover {
    color: black
}

input:focus {
    border: 1.5px solid black;
    outline: 0;
}

ul li:first-child a {
    color: violet;
}

ul li:last-child a {
    color: pink;
}

ul li:first-of-type a {
    color: yellow;
}

/* an + b - a co ile skaczemy, b od którego zaczynamy */

ul li:nth-last-of-type(3n + 2) a {
    color: orange;
}

/* selektor atrybutu
wszystkie kolory które posiadają dany atrybut (typ) */

[type] {
    background-color: grey;
}

input[title="pierwszy input"] {
    background-color: orange;
}

input[title="drugi input"] {
    background-color: red;
}


/* wartość odzielona spacja */
/* specjalny błąd w "input" */
inpu[title~="input"] {
    background-color: red;
}

/* czy znajduje się dany ciąg znaków */

input[title*="ty"] {
    background-color: aqua;
}

/* czy zaczyna się na konkretny ciąg znaków */

input[title^="p"] {
    background-color: green;
}

/* czy dany ciąg znaków kończy się na ... */
/* specjalny błąd w atrybucie */

input[title$="inpu"] {
    background-color: olive;
}

/* hierarchia css */
/* id > . */

#main-nav .ul {
    background-color: gray;
}

.main-nav #ul {
    background-color: indigo;
}

/* pozycjonowanie */
/* właściwości: top, left, right, bottom */
/* + dajemy przed stronę. - dajemy za stronę. Do przodu albo do tyłu */

.position {
    position: relative;
}

.position-inner {
    height: 200px;
    position: orange;
}

.orange {
    background-color: orange;
    position: absolute;
    left: 10px;
    top: 10px; 
    width: 100%;
}

.gray {
    background-color: gray;
    position: relative
}

.main-nav {
    /* position: fixed; */
    z-index: 9999999999;
    width: 100%;
    top: 0;
    left: 0;
}

div.background {
    position: sticky;
    top: 0;
    z-index: 9999999;
}

/* jednostki miary */

#jednostki-miary {
    margin-top: 100px;
    font-size: 20px;
}

#jednostki-miary > div {
    background-color: burlywood;
    margin-bottom: 10px;
}

/* odwołują się do nadrzędnej */

#piksele {
    width: 400px;
}

#em {
    width: 30em;
}

#procenty {
    width: 50%;
    font-size: 50%;
}

#vh {
    width: 50vh;
}

/* odwłoują się do root-a (html) */

#rem {
    width: 100rem;
}

/* kolory */
/* zwykły */

#heksadecymany {
    background-color: #ff0000;                          /* zwykły heksadecyjny */
    background-color: #f00;                             /* skrócony heksadecyjny*/
    background-color: rgb(255, 0, 0);                   /* skrót RGB*/
    background-color: rgb(0, 255, 0);                   /* skrót RGB*/
    background-color: rgb(0, 0, 255);                   /* skrót RGB*/
    background-color: rgba(red, green, blue, 1.5);
}
    /* wyświetlanie */  

.display {
    text-align: center;    /* centrowanie liniowych bloków */  
}

.display-inner {
        height: 200px;
    width: 200px;   
    background-color: #000;
    display: inline-block;
    font-size: 16;
 }

    /* float */

.float-inner img{
float: right;
  }

 .clear {
clear: right;   
 }

    /* tranzycje */

.transition {
    width: 300px;
    height: 100px;
    background-color: red;
    transition-property: all;
    transition-duration: 0.4s;
    transition-timing-function: ease-in;
    transition: width .4s ease-in, background-color .4s ease-in .4s;

}

.transition:hover {
    width: 600px;
    background-color: blue;
}

    /* właściwości tła */

.background1 {
    height: 800px;
    background-image: url('https://edupolis.pl/wp-content/uploads/2019/02/OSIRIS_Mars_true_color.jpg');
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
}

/* przepelanianie elementu */
/* okienk z tekstem + pasek przewijania */

.overflow {
    width: 300px;
    height: 100px;
    border: 1px dashed #000;
    overflow: auto;
}


/* transform */

.transform div {
    width: 800px;
    height: 450px;
    overflow: hidden;
}

.transform img {
    transition: all 0.4s;
}

.transform .rotate img:hover {
    transform: rotate(-360deg);
}

.transform .translate img:hover {
    transform: translate(100px, 10px);
}

.transform .scale img:hover {
    transform: scale(1.5);
}


/* tr: translate to (-50%, -50%) */
/* przesunięcie zawsze następuje od środka */





.animation  {
    height: 100px;
    background-color: blue;
    animation-name: resize;
    animation-iteration-count: infinite;
    animation-duration: 3s;
    animation-timing-function: linear;

}

/* animacje */

@keyframes resize {
    0%, 100% {
        width: 100%;
    }
    50% {
        width: 50%;
    }
}

/* flex */
/* container z obiektami, które są zależne od niego */
/* wszystko w osi */

.flex-container {
    /* dostęp do osi */
    display: flex;
    /* flex-wrap: wrap; */
    flex-direction: row;
    justify-content: center;

    /* align-content traktuje jako osobne wiersze */
    /* align-item traktuje jako jeden wiersz */
    align-items: center;
    height: 400px;
    background-color: green;

   
}

.flex-item {
    /* basis idzie tylko na itemy */
    /* szerokość itemu */
    flex-basis: 25%;
}
/* ustawianie kolejności według orderów 0->X */

.flex-item:first-of-type {
    order: 1;
    flex-grow: 1;
}

/* align-items żeby wyłamać content */
.flex-item:nth-of-type(2) {
    align-self: flex-start;
}

.flex-item:nth-of-type(4) {
    flex-shrink: 4;
}